<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yyhn.exam.mapper.JobExampleStudyMapper">
    <resultMap id="jobExampleStudyResult" type="JobExampleStudy">
        <id property="id" column="id"/>
        <result column="title" property="title"/>
        <result column="answer" property="answer"></result>
        <result column="viedoConvertContent" property="viedoConvertContent"></result>
        <result column="viedoUrl" property="viedoUrl"></result>
        <result column="score" property="score"></result>
        <result column="remark" property="remark"></result>
        <result column="professional_id" property="professionalId"></result>
        <result column="course_id" property="courseId"></result>
        <association property="professional" javaType="Professional">
            <id column="proId" property="id"></id>
            <result column="professionalName" property="professionalName"></result>
        </association>
        <association property="course" javaType="Course">
            <id column="courseId" property="id"></id>
            <result column="course_name" property="courseName"></result>
        </association>
    </resultMap>

    <select id="getAllJobExampleStudy" resultMap="jobExampleStudyResult" parameterType="map">
        SELECT
        es.* ,p.`professional_name` professionalName,p.id proId,c.`course_name`,c.id courseId
        FROM
        exam_job_example_study es , exam_professional p,exam_course c
        WHERE
        es.`professional_id` = p.`id`
        AND
        es.`course_id` = c.`id`

        <include refid="jobExampleStudy_condition"/>

        order by  es.id desc

    </select>


    <select id="getCount" resultType="int">
        select count(1) from exam_job_example_study es
        <where>
            <include refid="jobExampleStudy_condition"/>
        </where>
    </select>


    <sql id="jobExampleStudy_condition">
        <if test="title!=null">
            and title like concat('%',#{title},'%')
        </if>

        <if test="professionalId!=null">
            and  es.`professional_id` = #{professionalId}
        </if>

        <if test="courseId!=null">
            and  es.course_id = #{courseId}
        </if>
    </sql>


    <insert id="addJobExampleStudy" parameterType="JobExampleStudy">
        insert into exam_job_example_study
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="title != null">
                title,
            </if>
            <if test="answer != null">
                answer,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="score != null">
                score,
            </if>
            <if test="professionalId != null">
                professional_id,
            </if>
            <if test="courseId != null">
                course_id,
            </if>

        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="answer != null">
                #{answer,jdbcType=VARCHAR},
            </if>

            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="score != null">
                #{score,jdbcType=INTEGER},
            </if>
            <if test="professionalId != null">
                #{professionalId,jdbcType=INTEGER},
            </if>
            <if test="courseId != null">
                #{courseId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="updateJobExampleStudy" parameterType="JobExampleStudy">
        update exam_job_example_study
        <set>
            <if test="title!=null">
                title = #{title},
            </if>
            <if  test="answer!=null">
                answer =#{answer},
            </if>

            <if  test="score!=null">
                score =#{score},
            </if>
            <if  test="remark!=null">
                remark =#{remark},
            </if>
            <if  test="professionalId!=null">
                professional_id =#{professionalId},
            </if>
            <if  test="courseId!=null">
                course_id =#{courseId},
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="deleteJobExampleStudy" parameterType="int">
        delete from  exam_job_example_study  where  id =  #{id}
    </delete>

    <select id="getJobExampleStudyById" resultMap="jobExampleStudyResult">
              SELECT
                    es.* ,p.`professional_name` professionalName,p.id proId,c.`course_name`,c.id courseId
               FROM
                    exam_job_example_study es , exam_professional p,exam_course c
               WHERE
                    es.`professional_id` = p.`id`
               AND
                     es.`course_id` = c.`id`

               and  es.id=#{id}
    </select>


    <select id="getJobExampleStudyByCourse" resultType="int">
        select COUNT(id) from exam_job_example_study where Professional_id=#{professionalId} and course_id=#{courseId}
    </select>

    <select id="getJobExampleStudyBypProfessionalCourse" resultMap="jobExampleStudyResult">
        SELECT
        es.* ,p.`professional_name` professionalName,p.id proId,c.`course_name`,c.id courseId
        FROM
        exam_job_example_study es , exam_professional p,exam_course c
        WHERE
        es.`professional_id` = p.`id`
        AND
        es.`course_id` = c.`id`
        and
        es.Professional_id=#{professionalId}
        and
        es.course_id=#{courseId} limit #{page},1
    </select>
</mapper>