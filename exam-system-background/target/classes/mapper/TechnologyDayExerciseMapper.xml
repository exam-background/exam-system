<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper  namespace="com.yyhn.exam.mapper.TechnologyDayExerciseMapper">

    <resultMap id="dayExerciseResult" type="TechnologyDayExercise">
        <id property="id" column="id"/>
        <result column="title" property="title"/>
        <result column="standardAnswer" property="standardAnswer"/>
        <result column="setScore" property="setScore"></result>
        <result column="types" property="types"></result>
        <result column="analysis" property="analysis"></result>
        <result column="remark" property="remark"></result>
        <result column="buildExerciseDate" property="buildExerciseDate"></result>
        <result column="updateExerciseDate" property="updateExerciseDate"></result>

        <association property="course" javaType="Course">
            <id property="id" column="courseId"/>
            <result column="courseName" property="courseName"></result>
        </association>

        <association property="professional" javaType="Professional">
            <id property="id" column="professionalId"/>
            <result column="professionalName" property="professionalName"></result>
        </association>

        <association property="sysDictionary" javaType="SysDictionary">
            <id property="id" column="types"/>
            <result column="dictionaryName" property="dictionaryName"></result>
        </association>

        <collection property="exerciseItems" ofType="TechnologyDayExerciseItem">
            <id property="id" column="item_id"/>
            <result column="exerciseId" property="exerciseId"></result>
            <result column="content" property="content"></result>
            <result column="orderNum" property="orderNum"></result>
        </collection>

    </resultMap>

    <sql id="base_column_list">
          exam_technology_day_exercise.id id, exam_technology_day_exercise.title title,
          exam_technology_day_exercise.standard_answer standardAnswer, exam_technology_day_exercise.set_score setScore,
          exam_technology_day_exercise.types types, exam_technology_day_exercise.analysis analysis,
          exam_technology_day_exercise.remark remark, exam_technology_day_exercise.build_exercise_date buildExerciseDate,
          exam_technology_day_exercise.update_exercise_date updateExerciseDate, exam_technology_day_exercise_item.id item_id,
          exam_technology_day_exercise_item.exercise_id exerciseId, exam_technology_day_exercise_item.content,
          exam_technology_day_exercise_item.order_num orderNum,exam_professional.id professionalId,
          exam_professional.professional_name professionalName, exam_sys_dictionary.dictionary_name dictionaryName,
          exam_course.id courseId, exam_course.course_name courseName
    </sql>

    <select id="getAllTechnologyDayExercise" resultMap="dayExerciseResult" parameterType="map">
        select
        <include refid="base_column_list" />
        from exam_technology_day_exercise
        left join exam_technology_day_exercise_item on exam_technology_day_exercise.id = exam_technology_day_exercise_item.exercise_id
        join exam_professional on exam_technology_day_exercise.Professional_id = exam_professional.id
        join exam_sys_dictionary on exam_technology_day_exercise.types = exam_sys_dictionary.id
        join exam_course on exam_technology_day_exercise.course_id = exam_course.id
        <include refid="condition"/>
        order by id desc
        <if test="startRow != null">
            limit #{startRow},#{pageSize}
        </if>
    </select>

    <select id="getCount" resultType="int"  parameterType="map">
        SELECT
            COUNT(1)
        FROM
            exam_technology_day_exercise de,
            exam_professional p,
            exam_course  c
        WHERE
            de.professional_id = p.id
        AND
            de.course_id = c.id
        <include refid="condition"/>
    </select>

    <sql id="condition">
            <if test="professionId!=null and professionId!=''">
                and exam_technology_day_exercise.professional_id  = #{professionId}
            </if>
            <if test="courseId!=null and courseId!=''">
                and exam_technology_day_exercise.course_Id =#{courseId}
            </if>
            <if test="title!=null and title!=''">
                and exam_technology_day_exercise.title like concat('%',#{title},'%')
            </if>
            <if test="types!=null and types!=''">
                and exam_technology_day_exercise.types = #{types}
            </if>
    </sql>

    <insert id="addTechnologyDayExercise" parameterType="TechnologyDayExercise" useGeneratedKeys="true" keyProperty="id">
<!--        <selectKey resultType="java.lang.Integer" keyProperty="id" order="BEFORE" >//AFTER-->
<!--            SELECT LAST_INSERT_ID()-->
<!--        </selectKey>-->
        insert into exam_technology_day_exercise

        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="title != null">
                title,
            </if>
            <if test="types != null">
                types,
            </if>
            <if test="standardAnswer != null">
                standard_answer,
            </if>
            <if test="setScore != null">
                set_score,
            </if>
            <if test="professional.id != null">
                professional_id,
            </if>
            <if test="course.id != null">
                course_id,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="analysis != null">
                analysis,
            </if>
            <if test="professionalId != null">
                Professional_id,
            </if>
            <if test="courseId != null">
                course_id,
            </if>
            <if test="buildExerciseDate != null">
                build_exercise_date,
            </if>
            <if test="updateExerciseDate != null">
                update_exercise_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="types != null">
                #{types,jdbcType=VARCHAR},
            </if>
            <if test="standardAnswer != null">
                #{standardAnswer,jdbcType=VARCHAR},
            </if>
            <if test="setScore != null">
                #{setScore,jdbcType=INTEGER},
            </if>
            <if test="analysis != null">
                #{analysis,jdbcType=VARCHAR},
            </if>
            <if test="professionalId != null">
                #{professionalId,jdbcType=INTEGER},
            </if>
            <if test="courseId != null">
                #{courseId,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="buildExerciseDate != null">
                #{buildExerciseDate,jdbcType=DATE},
            </if>
            <if test="updateExerciseDate != null">
                #{updateExerciseDate,jdbcType=DATE},
            </if>
        </trim>
    </insert>

    <update id="updateTechnologyDayExercise" parameterType="TechnologyDayExercise">
        update exam_technology_day_exercise
        <set>
            <if test="title!=null">
                title = #{title},
            </if>
            <if  test="types!=null">
                types = #{types},
            </if>
            <if  test="standardAnswer!=null">
                standard_answer = #{standardAnswer},
            </if>
            <if  test="setScore!=null">
                set_score = #{setScore},
            </if>
            <if test="analysis != null">
                analysis = #{analysis},
            </if>
            <if  test="professionalId!=null">
                professional_id = #{professionalId},
            </if>
            <if  test="courseId!=null">
                course_id = #{courseId},
            </if>
            <if  test="remark!=null">
                remark = #{remark},
            </if>
            <if  test="updateExerciseDate!=null">
                update_exercise_date = #{updateExerciseDate},
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="deleteTechnologyDayExercise" parameterType="int">
        delete from exam_technology_day_exercise where id = #{id}
    </delete>

    <delete id="deleteTechnologyDayExercises" parameterType="int">
        delete from exam_technology_day_exercise where id IN
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="getTechnologyDayExerciseById" parameterType="int">
        select
        <include refid="base_column_list" />
        FROM
        exam_technology_day_exercise de,
        exam_professional p,
        exam_course  c
        WHERE
        de.professional_id = p.id
        AND
        de.course_id = c.id
        AND
        de.id = #{id}
    </select>
    
    <select id="getTechnologyDayExerciseByCourse" resultType="Integer">
        select COUNT(id) from exam_technology_day_exercise where Professional_id=#{professionalId} and course_id=#{courseId}
    </select>

    <select id="getTechnologyDayExerciseBypProfessionalCourse" resultMap="dayExerciseResult">
        select * from exam_technology_day_exercise where Professional_id=#{professionalId} and course_id=#{courseId} limit #{page},1
    </select>
</mapper>